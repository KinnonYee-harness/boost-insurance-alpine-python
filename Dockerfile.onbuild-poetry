ARG BASE_TAG
ARG ECR_REGISTRY
ARG ECR_REPOSITORY

FROM ${ECR_REGISTRY}/${ECR_REPOSITORY}:${BASE_TAG}

ENV USER appuser

ONBUILD ARG POETRY_GROUPS
ONBUILD ENV POETRY_GROUPS ${POETRY_GROUPS:-main}
ONBUILD ARG GEMFURY_TOKEN
ONBUILD ENV GEMFURY_TOKEN=$GEMFURY_TOKEN
ONBUILD ARG APP_VERSION
ONBUILD ENV APP_VERSION ${APP_VERSION}
ONBUILD ENV POETRY_CACHE_DIR=/tmp/poetry_cache

RUN apk add --no-cache gcc g++ linux-headers libffi-dev \
    glib gcompat \
    bash libstdc++ gobject-introspection-dev \
    pkgconf
    
RUN curl -sSL https://install.python-poetry.org | python3 -

RUN addgroup -S -g 1000 ${USER} && adduser -S -D -h /app -u 1000 -G ${USER} ${USER}

WORKDIR /app

ONBUILD COPY pyproject* poetry* ./
ONBUILD COPY . .

ONBUILD RUN chown -R ${USER}:${USER} /app

ONBUILD RUN set -eux; \
        poetry config virtualenvs.create false; \
        poetry config http-basic.fury ${GEMFURY_TOKEN} NOPASS; \
	    poetry config --list; \
        poetry install -n --no-ansi --no-root --no-cache --only $POETRY_GROUPS && rm -rf $POETRY_CACHE_DIR
ONBUILD USER ${USER}
